{"version":3,"sources":["redux/constants/tasks-constants.js","redux/actions/add-task.js","components/CreateTaskComponent.js","redux/actions/update-task.js","redux/actions/remove-task.js","components/TaskComponent.js","App.js","redux/reducers/tasks-reducer.js","redux/store.js","index.js"],"names":["TasksConstants","ADD_TASK","REMOVE_TASK","UPDATE_TASK","addTask","task","type","CreateTaskComponent","props","dispatch","useDispatch","useState","setTask","className","value","onChange","event","target","placeholder","onClick","updateTask","index","removeTask","ind","TaskComponent","editMode","setEditMode","App","tasks","useSelector","state","map","tsk","tasksReducer","action","slice","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAKeA,EALQ,CACrBC,SAAU,WACVC,YAAa,cACbC,YAAa,eCCAC,EAHC,SAACC,GACf,MAAO,CAAEA,KAAMA,EAAMC,KAAMN,EAAeC,W,OC0B7BM,EAvBa,SAACC,GAC3B,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KAMA,OACE,sBAAKC,UAAU,eAAf,UACE,uBACEP,KAAK,OACLQ,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAWJ,EAAQI,EAAMC,OAAOH,QAC1CI,YAAY,SAEd,wBAAQL,UAAU,yBAAyBM,QAbhC,WACbP,EAAQ,IACRH,EAASL,EAAQC,KAWf,0BCVSe,EARI,SAACf,EAAMgB,GACxB,MAAO,CACLf,KAAMN,EAAeG,YACrBkB,MAAOA,EACPhB,KAAMA,ICDKiB,EAJI,SAACC,GAClB,MAAO,CAAEF,MAAOE,EAAKjB,KAAMN,EAAeE,cCkC7BsB,EA/BO,SAAChB,GACrB,MAAwBG,mBAASH,EAAMH,MAAvC,mBAAOA,EAAP,KAAaO,EAAb,KACA,EAAgCD,oBAAS,GAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KACML,EAAQb,EAAMa,MACdZ,EAAWC,cACjB,OACE,sBAAKG,UAAU,OAAf,UACGY,EACC,uBACEnB,KAAK,OACLQ,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAWJ,EAAQI,EAAMC,OAAOH,UAG5C,4BAAIT,IAGN,wBACEc,QAAS,kBACPM,EACIhB,EAASW,EAAWf,EAAMgB,KAAWK,GAAaD,GAClDC,GAAaD,IAJrB,SAOGA,EAAW,OAAS,SAEvB,wBAAQN,QAAS,kBAAMV,EAASa,EAAWD,KAA3C,mBCRSM,MAnBf,WACE,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,KACrC,OACE,sBAAKjB,UAAU,gBAAf,UACE,0CACA,cAAC,EAAD,IACA,qBAAKA,UAAU,aAAf,SACGe,EAAMG,KAAI,SAACC,EAAKT,GAAN,OACT,cAAC,EAAD,CACElB,KAAM2B,EACNX,MAAOE,GACFA,Y,eCMFU,EApBM,WAAyB,IAAxBH,EAAuB,uDAAf,GAAII,EAAW,uCAC3C,OAAQA,EAAO5B,MACb,KAAKN,EAAeC,SAClB,MAAM,CAAEiC,EAAO7B,MAAf,mBAAwByB,IAC1B,KAAK9B,EAAeE,YAClB,MAAM,GAAN,mBACK4B,EAAMK,MAAM,EAAGD,EAAOb,QAD3B,YAEKS,EAAMK,MAAMD,EAAOb,MAAQ,KAElC,KAAKrB,EAAeG,YAClB,MAAM,GAAN,mBACK2B,EAAMK,MAAM,EAAGD,EAAOb,QAD3B,CAEEa,EAAO7B,MAFT,YAGKyB,EAAMK,MAAMD,EAAOb,MAAQ,KAElC,QACE,OAAO,YAAIS,KCVFM,EAJDC,YACZJ,EACAK,OAAOC,8BAAgCD,OAAOC,gCCChDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.7f15d67b.chunk.js","sourcesContent":["const TasksConstants = {\r\n  ADD_TASK: \"ADD_TASK\",\r\n  REMOVE_TASK: \"REMOVE_TASK\",\r\n  UPDATE_TASK: \"UPDATE_TASK\",\r\n};\r\nexport default TasksConstants;\r\n","import TasksConstants from \"../constants/tasks-constants\";\r\nconst addTask = (task) => {\r\n  return { task: task, type: TasksConstants.ADD_TASK };\r\n};\r\nexport default addTask;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport addTask from \"../redux/actions/add-task\";\r\n\r\nconst CreateTaskComponent = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [task, setTask] = useState(\"\");\r\n  const submit = () => {\r\n    setTask(\"\");\r\n    dispatch(addTask(task));\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-block\">\r\n      <input\r\n        type=\"text\"\r\n        value={task}\r\n        onChange={(event) => setTask(event.target.value)}\r\n        placeholder=\"Task\"\r\n      />\r\n      <button className=\"btn task-btn flex-auto\" onClick={submit}>\r\n        Add Task\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTaskComponent;\r\n","import TasksConstants from \"../constants/tasks-constants\";\r\n\r\n\r\nconst updateTask = (task, index) => {\r\n  return {\r\n    type: TasksConstants.UPDATE_TASK,\r\n    index: index,\r\n    task: task,\r\n  };\r\n};\r\n\r\nexport default updateTask;\r\n","import TasksConstants from \"../constants/tasks-constants\";\r\n\r\nconst removeTask = (ind) => {\r\n  return { index: ind, type: TasksConstants.REMOVE_TASK };\r\n};\r\n\r\nexport default removeTask;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport updateTask from \"../redux/actions/update-task\";\r\nimport removeTask from \"../redux/actions/remove-task\";\r\n\r\nconst TaskComponent = (props) => {\r\n  const [task, setTask] = useState(props.task);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const index = props.index;\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"task\">\r\n      {editMode ? (\r\n        <input\r\n          type=\"text\"\r\n          value={task}\r\n          onChange={(event) => setTask(event.target.value)}\r\n        />\r\n      ) : (\r\n        <p>{task}</p>\r\n      )}\r\n\r\n      <button\r\n        onClick={() =>\r\n          editMode\r\n            ? dispatch(updateTask(task, index)) && setEditMode(!editMode)\r\n            : setEditMode(!editMode)\r\n        }\r\n      >\r\n        {editMode ? \"Save\" : \"Edit\"}\r\n      </button>\r\n      <button onClick={() => dispatch(removeTask(index))}>X</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskComponent;\r\n","import \"./App.css\";\r\nimport CreateTaskComponent from \"./components/CreateTaskComponent\";\r\nimport TaskComponent from \"./components/TaskComponent\";\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction App() {\r\n  const tasks = useSelector((state) => state);\r\n  return (\r\n    <div className=\"App container\">\r\n      <h1>TODO App</h1>\r\n      <CreateTaskComponent />\r\n      <div className=\"tasks-list\">\r\n        {tasks.map((tsk, ind) => (\r\n          <TaskComponent\r\n            task={tsk}\r\n            index={ind}\r\n            key={ind}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import TasksConstants from \"../constants/tasks-constants\";\r\n\r\nconst tasksReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TasksConstants.ADD_TASK:\r\n      return [action.task, ...state];\r\n    case TasksConstants.REMOVE_TASK:\r\n      return [\r\n        ...state.slice(0, action.index),\r\n        ...state.slice(action.index + 1),\r\n      ];\r\n    case TasksConstants.UPDATE_TASK:\r\n      return [\r\n        ...state.slice(0, action.index),\r\n        action.task,\r\n        ...state.slice(action.index + 1),\r\n      ];\r\n    default:\r\n      return [...state];\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import { createStore } from \"redux\";\r\nimport tasksReducer from \"./reducers/tasks-reducer\";\r\n\r\n//STORE\r\nconst store = createStore(\r\n  tasksReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}